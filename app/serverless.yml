service: heats
app: heats
org: llunspace

provider:
  name: aws
  stage: ${opt:stage, 'dev'}
  runtime: nodejs12.x
  region: ap-southeast-1
  memorySize: 512
  timeout: 10
  versionFunctions: false
  environment:
    ENVIRONMENT: ${opt:stage}
    DYNAMODB: '1'
    S3_BUCKET: heats-${opt:stage}
    SQS:
      Ref: BackgroundQueue
  httpApi:
    payload: '1.0'
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:DescribeTable
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
        - sqs:SendMessage
        - s3:PutObject
        - s3:GetObject
      Resource:
        - 'arn:aws:dynamodb:*:*:table/Sessions-*'
        - 'arn:aws:dynamodb:*:*:table/Users-*'
        - 'arn:aws:dynamodb:*:*:table/Activities-*'
        - 'arn:aws:dynamodb:*:*:table/ActivityPoints-*'
        - 'arn:aws:dynamodb:*:*:table/HeatMaps-*'
        - 'arn:aws:sqs:*:*:Heats-Default-${opt:stage}'
        - 'arn:aws:s3:::heats-${opt:stage}/*'

functions:
  serve:
    name: heats-serve-${opt:stage}
    handler: serverless.entry
    environment:
      SESSION_SECRET: ${param:SESSION_SECRET}
    events:
      - httpApi: '*'
  background:
    name: heats-background-${opt:stage}
    handler: background.entry
    memorySize: 1024
    reservedConcurrency: 5
    timeout: 300
    layers:
      - arn:aws:lambda:ap-southeast-1:107563078874:layer:node12-canvas:1
      - arn:aws:lambda:ap-southeast-1:107563078874:layer:canvas-lib64:1
    events:
      - sqs:
          arn:
            Fn::GetAtt:
              - BackgroundQueue
              - Arn

resources:
  Resources:
    UserTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: Users-${opt:stage}
        AttributeDefinitions:
          - AttributeName: key
            AttributeType: S
          - AttributeName: email
            AttributeType: S
        KeySchema:
          - AttributeName: key
            KeyType: HASH
        GlobalSecondaryIndexes:
          - IndexName: EmailIndex
            KeySchema:
              - AttributeName: email
                KeyType: HASH
            Projection:
              ProjectionType: KEYS_ONLY
        BillingMode: PAY_PER_REQUEST
    SessionTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: Sessions-${opt:stage}
        AttributeDefinitions:
          - AttributeName: key
            AttributeType: S
        KeySchema:
          - AttributeName: key
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST
    ActivityTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: Activities-${opt:stage}
        AttributeDefinitions:
          - AttributeName: key
            AttributeType: S
          - AttributeName: userKey
            AttributeType: S
          - AttributeName: createdAt
            AttributeType: N
        KeySchema:
          - AttributeName: key
            KeyType: HASH
        GlobalSecondaryIndexes:
          - IndexName: UserActivitiesIndex
            KeySchema:
              - AttributeName: userKey
                KeyType: HASH
              - AttributeName: createdAt
                KeyType: RANGE
            Projection:
              ProjectionType: KEYS_ONLY
        BillingMode: PAY_PER_REQUEST
    ActivityPointTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ActivityPoints-${opt:stage}
        AttributeDefinitions:
          - AttributeName: activityKey
            AttributeType: S
          - AttributeName: userKey
            AttributeType: S
          - AttributeName: timestamp
            AttributeType: N
        KeySchema:
          - AttributeName: activityKey
            KeyType: HASH
          - AttributeName: timestamp
            KeyType: RANGE
        GlobalSecondaryIndexes:
          - IndexName: UserPointsIndex
            KeySchema:
              - AttributeName: userKey
                KeyType: HASH
              - AttributeName: timestamp
                KeyType: RANGE
            Projection:
              ProjectionType: ALL
        BillingMode: PAY_PER_REQUEST
    HeatMapTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: 'HeatMaps-${opt:stage}'
        AttributeDefinitions:
          - AttributeName: key
            AttributeType: S
          - AttributeName: userKey
            AttributeType: S
          - AttributeName: createdAt
            AttributeType: N
        KeySchema:
          - AttributeName: key
            KeyType: HASH
          - AttributeName: createdAt
            KeyType: RANGE
        GlobalSecondaryIndexes:
          - IndexName: UserHeatMapsIndex
            KeySchema:
              - AttributeName: userKey
                KeyType: HASH
              - AttributeName: createdAt
                KeyType: RANGE
            Projection:
              ProjectionType: ALL
        BillingMode: PAY_PER_REQUEST
    BackgroundQueue:
      Type: 'AWS::SQS::Queue'
      Properties:
        QueueName: 'Heats-Default-${opt:stage}'
        VisibilityTimeout: 600
    FileStorage:
      Type: 'AWS::S3::Bucket'
      Properties:
        BucketName: 'heats-${opt:stage}'
